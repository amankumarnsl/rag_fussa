version: '3.8'

services:
  rag-fussa-api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      # Add your environment variables here or use .env file
      # - OPENAI_API_KEY=${OPENAI_API_KEY}
      # - PINECONE_API_KEY=${PINECONE_API_KEY}
      # - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      # - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health/live')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for Celery broker and result backend
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery worker
  celery-worker:
    build: .
    command: ["python", "start_worker.py"]
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - REDIS_URL=redis://redis:6379/0
      # Add your environment variables here or use .env file
    volumes:
      - ./logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped

networks:
  default:
    name: rag-fussa-network
